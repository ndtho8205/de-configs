#!/usr/bin/env bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

print_usage() {
  cat <<EOF
usage: $(basename "$0") [OPTION]

Options:
  --status       discharging/charging/full
  --percentage   Current battery percentage
  --remaining    Remaining time (hh:mm:ss)
  --notify       Send notification
  --stdout       Print current brightnes level
  -h, --help     Show this help and exit
EOF
}

parse_params() {
  if [[ $# -eq 0 ]]; then
    echo "No option specified."
    exit 1
  fi

  local param
  action='' notify=false stdout=false

  while [[ $# -gt 0 ]]; do
    param="$1"
    shift

    case $param in
    --inc)
      action=inc
      ;;
    --dec)
      action=dec
      ;;
    --notify)
      notify=true
      ;;
    --stdout)
      stdout=true
      ;;
    -h | --help)
      print_usage
      exit 0
      ;;
    *)
      echo "error: unrecognized arguments: $param"
      exit 1
      ;;
    esac
  done
}

get_status() {
  status=$(acpi --battery | awk -F. '{print $1}')
  # Battery 0: Discharging, 99%, 05:29:51 remaining
  # Battery 0: Charging, 91%, 00:13:43 until charged
  # Battery 0: Full, 100%

  echo "$status"
}

send_notification() {
  notify-send "$(get_brightness)"
}

handle() {
  if [[ -n $action ]]; then
    xbacklight -$action 5
  fi

  current_brightness=$(get_brightness)

  if [[ $notify == "true" ]]; then
    notify-send "$current_brightness"
  fi

  if [[ $stdout == "true" ]]; then
    echo "$current_brightness"
  fi
}

if ! (return 0 2>/dev/null); then
  parse_params "$@"

  handle
fi
