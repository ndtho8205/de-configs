#!/usr/bin/bash

set -o errexit
set -o errtrace
set -o nounset
set -o pipefail

main() {
  action='' notify=false stdout=false

  _parse_params "$@"

  case $action in
  inc)
    pamixer --unmute --increase 5
    ;;
  dec)
    pamixer --decrease 5
    ;;
  toggle-mute)
    pamixer --toggle-mute
    ;;
  esac

  if [[ $notify == "true" ]]; then
    _send_notification
  fi

  if [[ $stdout == "true" ]]; then
    _get_volume
  fi

}

_print_usage() {
  cat <<EOF
usage: $(basename "$0") [OPTION]

Options:
  --inc          Increase volume by 5%
  --dec          Decrease volume by 5%
  --toggle-mute  Toggle mute/unmute
  --notify       Send notification
  --stdout       Print current volume level, or -1 if muted
  -h, --help     Show this help and exit
EOF
}

_parse_params() {
  if [[ $# -eq 0 ]]; then
    echo "No option specified."
    echo
    _print_usage
    exit 1
  fi

  local param

  while [[ $# -gt 0 ]]; do
    param="$1"
    shift

    case $param in
    --inc)
      action="inc"
      ;;
    --dec)
      action="dec"
      ;;
    --toggle-mute)
      action="toggle-mute"
      ;;
    --notify)
      notify=true
      ;;
    --stdout)
      stdout=true
      ;;
    -h | --help)
      _print_usage
      exit 0
      ;;
    *)
      echo "error: unrecognized arguments: $param"
      exit 1
      ;;
    esac
  done
}

_get_volume() {
  local volume

  if [[ $(pamixer --get-mute) == "true" ]]; then
    echo "muted"
    return
  fi

  if ! pamixer --get-volume 1>/dev/null 2>&1; then
    echo "0"
    return
  else
    volume=$(pamixer --get-volume)
    echo "$volume"
  fi
}

_get_icon_by_volume() {
  local -r volume=$(_get_volume)

  if [[ "$volume" == "muted" ]]; then
    echo "audio-volume-muted"
  else
    echo "audio-volume-high"
  fi
}

_send_notification() {
  local appname notification_id notification_icon volume

  appname=$(basename "$0")
  notification_id=$(cksum <<<"$(basename "$0")" | cut -f 1 -d ' ')
  volume=$(_get_volume)

  case $action in
  inc)
    notification_icon="audio-volume-high"
    ;;
  dec)
    notification_icon="audio-volume-medium"
    ;;
  *)
    notification_icon=$(_get_icon_by_volume)
    ;;
  esac

  dunstify \
    --appname="$appname" \
    --urgency="low" \
    --icon="$notification_icon" \
    --replace="$notification_id" \
    --hints="int:value:$volume" \
    -- \
    "Volume"
}

main "$@"
